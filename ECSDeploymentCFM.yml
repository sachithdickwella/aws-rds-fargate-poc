AWSTemplateFormatVersion: 2010-09-09

Parameters:
  RepositoryLocationParameter:
    Type: String
    Default: https://github.com/sachithdickwella/aws-rds-fargate-poc.git
    ConstraintDescription: Code build source repository location parameter. Preferably, should be a code repository URL.
  RepositoryArtifactsPath:
    Type: String
    Default: "Snapshots"
    ConstraintDescription: Development artifact path in the S3 bucket.
  DockerImageTag:
    Type: String
    Default: 'latest'
  DockerImageRepoName:
    Type: String
    Default: 'aws-fargate-poc'
  CurrentUserName:
    Type: String
  GithubPersonalAccessToken:
    Type: String

Resources:
  PersonalAccessToken:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: MyGithubPersonalAccessToken
      SecretString: !Ref GithubPersonalAccessToken
      Tags:
        - Key: Owner
          Value: 'Sachith Dickwella'
        - Key: Email
          Value: sachith_prasanna@live.com

  GitHubSourceCredential:
    Type: AWS::CodeBuild::SourceCredential
    DependsOn: PersonalAccessToken
    Properties:
      AuthType: PERSONAL_ACCESS_TOKEN
      ServerType: GITHUB
      Token: '{{resolve:secretsmanager:MyGithubPersonalAccessToken:SecretString}}'

  CloudBuild:
    Type: AWS::CodeBuild::Project
    DependsOn:
      - ECRImageRepository
      - CodeBuildRSASigningKey
      - MavenArtifactBucket
      - CodeBuildLogGroup
      - CodeBuildAccessRole
      - GitHubSourceCredential
    Properties:
      Name: CloudBuildPipeline
      Description: Cloud repository's build pipeline which deploy artifacts to the maven repository.
      Artifacts:
        Type: S3
        Location: !Ref MavenArtifactBucket
        OverrideArtifactName: true
        Name: "/"
        NamespaceType: BUILD_ID
        Path: !Ref RepositoryArtifactsPath
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:6.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Type: PLAINTEXT
            Value: !Ref AWS::Region
          - Name: AWS_ACCOUNT_ID
            Type: PLAINTEXT
            Value: !Ref AWS::AccountId
          - Name: IMAGE_TAG
            Type: PLAINTEXT
            Value: !Ref DockerImageTag
          - Name: IMAGE_REPO_NAME
            Type: PLAINTEXT
            Value: !Ref DockerImageRepoName
      ServiceRole: !Ref CodeBuildAccessRole
      EncryptionKey: !Ref CodeBuildRSASigningKey
      Source:
        Auth:
          Type: OAUTH
          Resource: !Ref GitHubSourceCredential
        Type: GITHUB
        Location: !Ref RepositoryLocationParameter
        GitCloneDepth: 1
        ReportBuildStatus: true
        GitSubmodulesConfig:
          FetchSubmodules: true
        BuildSpec: |
          version: 0.2
          phases:
            install:
              on-failure: ABORT
              runtime-versions: java: corretto19
            pre_build:
              commands:
                - mvn -version
                - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
            build:
              commands:
                - echo "Build started on `date`"
                - mvn -T 1.5C install
              finally:
                - echo Building the Docker image...          
                - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
                - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
            post_build:
              commands:
                - echo Build completed on `date`
                - echo Pushing the Docker image...
                - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
          artifacts:
            files:
              - "**/*.jar"
            discard-paths: yes
          cache:
            paths:
              - "/root/.m2/**/*"
      BadgeEnabled: false
      Triggers:
        Webhook: true
        FilterGroups:
          - - Type: EVENT
              Pattern: PUSH,PULL_REQUEST_MERGED
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Ref CodeBuildLogGroup
          Status: ENABLED

  CodeBuildAccessRole:
    Type: AWS::IAM::Role
    DependsOn:
      - MavenArtifactBucket
      - CodeBuildLogGroup
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - 'sts:AssumeRole'
      Description: IAM role for the CodeBuild,  project to access resources.
      Policies:
        - PolicyName: CodeBuildAccessRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource:
                  - Fn::Join:
                      - ""
                      - - !GetAtt [ MavenArtifactBucket, Arn ]
                  - Fn::Join:
                      - ""
                      - - !GetAtt [ MavenArtifactBucket, Arn ]
                        - "/*"
                Action:
                  - "s3:PutObject"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketAcl"
                  - "s3:GetBucketLocation"

              - Effect: Allow
                Resource:
                  - Fn::Join:
                      - ""
                      - - !GetAtt [ CodeBuildLogGroup, Arn ]
                  - Fn::Join:
                      - ""
                      - - !GetAtt [ CodeBuildLogGroup, Arn ]
                        - "/*"
                Action:
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"

  CodeBuildRSASigningKey:
    Type: AWS::KMS::Key
    Properties:
      Description: RSA-2048 asymmetric KMS key for signing and verification.
      Enabled: True
      KeySpec: RSA_2048
      KeyUsage: SIGN_VERIFY
      KeyPolicy:
        Version: 2012-10-17
        Id: key-default-1
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS:
                - !Join ['', [ 'arn:aws:iam::', !Ref AWS::AccountId, ':user/', !Ref CurrentUserName ]]
            Action: 'kms:*'
            Resource: '*'
          - Sid: Allow administration of the key
            Effect: Allow
            Principal:
              AWS: !Join ['', [ 'arn:aws:iam::', !Ref AWS::AccountId, ':user/', !Ref CurrentUserName ]]
            Action:
              - 'kms:Create*'
              - 'kms:Describe*'
              - 'kms:Enable*'
              - 'kms:List*'
              - 'kms:Put*'
              - 'kms:Update*'
              - 'kms:Revoke*'
              - 'kms:Disable*'
              - 'kms:Get*'
              - 'kms:Delete*'
              - 'kms:ScheduleKeyDeletion'
              - 'kms:CancelKeyDeletion'
            Resource: '*'
          - Sid: Allow use of the key
            Effect: Allow
            Principal:
              AWS: !Join ['', [ 'arn:aws:iam::', !Ref AWS::AccountId, ':user/', !Ref CurrentUserName ]]
            Action:
              - "kms:Encrypt"
              - "kms:Decrypt"
              - "kms:ReEncrypt*"
              - "kms:GenerateDataKey*"
              - "kms:DescribeKey"
              - 'kms:Sign'
              - 'kms:Verify'
              - 'kms:DescribeKey'
            Resource: '*'

  CodeBuildLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: "CodeBuildLogGroup"
      RetentionInDays: 30

  MavenArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub 'maven-artifacts-${AWS::Region}'
      AccessControl: Private # Default

  ECRImageRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Sub ${DockerImageRepoName}-repo
      ImageScanningConfiguration:
        ScanOnPush: true
      ImageTagMutability: MUTABLE
      RepositoryPolicyText:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowPushPull
            Effect: Allow
            Principal:
              AWS: !Join ['', [ 'arn:aws:iam::', !Ref AWS::AccountId, ':user/', !Ref CurrentUserName ]]
            Action:
              - "ecr:GetDownloadUrlForLayer"
              - "ecr:BatchGetImage"
              - "ecr:BatchCheckLayerAvailability"
              - "ecr:PutImage"
              - "ecr:InitiateLayerUpload"
              - "ecr:UploadLayerPart"
              - "ecr:CompleteLayerUpload"
      Tags:
        - Key: Owner
          Value: 'Sachith Dickwella'
        - Key: Email
          Value: sachith_prasanna@live.com
